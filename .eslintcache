[{"F:\\LeelaAllInOne\\Broadridge\\brwork\\jtpApp-20210202T081442Z-001\\jtpApp\\src\\index.js":"1","F:\\LeelaAllInOne\\Broadridge\\brwork\\jtpApp-20210202T081442Z-001\\jtpApp\\src\\App.js":"2","F:\\LeelaAllInOne\\Broadridge\\brwork\\jtpApp-20210202T081442Z-001\\jtpApp\\src\\Test.js":"3","F:\\LeelaAllInOne\\Broadridge\\brwork\\jtpApp-20210202T081442Z-001\\jtpApp\\src\\reportWebVitals.js":"4"},{"size":530,"mtime":1611870820000,"results":"5","hashOfConfig":"6"},{"size":528,"mtime":499117500000,"results":"7","hashOfConfig":"6"},{"size":4571,"mtime":1611882050000,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":499117500000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"180dg6w",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"F:\\LeelaAllInOne\\Broadridge\\brwork\\jtpApp-20210202T081442Z-001\\jtpApp\\src\\index.js",["21"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Test from './Test';\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    <Test/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["22","23"],"F:\\LeelaAllInOne\\Broadridge\\brwork\\jtpApp-20210202T081442Z-001\\jtpApp\\src\\App.js",[],"F:\\LeelaAllInOne\\Broadridge\\brwork\\jtpApp-20210202T081442Z-001\\jtpApp\\src\\Test.js",["24"],"import axios from 'axios'; \r\n  \r\nimport React,{Component} from 'react'; \r\nimport * as XLSX from 'xlsx';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\n  \r\nclass Test extends Component { \r\n   \r\n    state = { \r\n  \r\n      // Initially, no file is selected \r\n      selectedFile: null,\r\n      data:[],\r\n      userInput:[],\r\n      headers :[\r\n        { label: \"id\", key: \"id\" },\r\n        { label: \"userId\", key: \"userId\" },\r\n        { label: \"status\", key: \"test\" },\r\n        { label: \"title\", key: \"title\" },\r\n        { label: \"completed\", key: \"completed\" }\r\n      \r\n        ],\r\n      filteredArray:[]\r\n      \r\n    }; \r\n\r\n    componentDidMount(){\r\n        this.getData();\r\n      }\r\n\r\n      getData(){\r\n        fetch('https://jsonplaceholder.typicode.com/todos/')\r\n  .then(response => response.json())\r\n  .then(json => this.setState({data :json}))\r\n\r\n      }\r\n    \r\n    \r\n     \r\n    // On file select (from the pop up) \r\n    onFileChange = event => { \r\n     \r\n      // Update the state \r\n      this.setState({ selectedFile: event.target.files[0] }); \r\n\r\n      alert(this.state.data.length)\r\n     \r\n    }; \r\n     \r\n    \r\n    handleUpload = (e) => {\r\n        e.preventDefault();\r\n        var files = e.target.files, f = files[0];\r\n        var reader = new FileReader();\r\n        var dataParse=[]\r\n        reader.onload = (e) =>{\r\n            var data = e.target.result;\r\n            let readedData = XLSX.read(data, {type: 'binary'});\r\n            const wsname = readedData.SheetNames[0];\r\n            const ws = readedData.Sheets[wsname];\r\n    \r\n            /* Convert array to json*/\r\n             dataParse = XLSX.utils.sheet_to_json(ws, {header:1});\r\n             this.setState({userInput:dataParse}, () =>{\r\n                this.printInfo(dataParse)\r\n            })\r\n            \r\n        };\r\n      \r\nconsole.log(dataParse)\r\n        reader.readAsBinaryString(f)\r\n    }\r\n   \r\n    printInfo =(userdata) =>{\r\n\r\n        console.log(\" Api data\")\r\n        console.log(this.state.data);\r\n        console.log(\" user Input\")\r\n        console.log(userdata);\r\n        console.log(\"deffer two arrays here\")\r\n\r\n        const myArrayFiltered = this.state.data.map( el => {\r\n             if(userdata.find(f => f == el.id)){\r\n                 el.test =\"valid\";\r\n                 return el;\r\n             } else{\r\n                el.test =\"In valid\";\r\n                return el;\r\n             }\r\n\r\n          });\r\n          \r\n            console.log(myArrayFiltered)\r\n          this.setState({filteredArray:myArrayFiltered});\r\n            alert(\"now click download link\")\r\n\r\n\r\n    }\r\n    \r\n    // On file upload (click the upload button) \r\n    onFileUpload = () => { \r\n     \r\n        console.log(this.state.data)\r\n      // Create an object of formData \r\n      const formData = new FormData(); \r\n     \r\n      // Update the formData object \r\n      formData.append( \r\n        \"myFile\", \r\n        this.state.selectedFile, \r\n        this.state.selectedFile.name \r\n      ); \r\n     \r\n      // Details of the uploaded file \r\n      console.log(this.state.selectedFile); \r\n     \r\n      // Request made to the backend api \r\n      // Send formData object \r\n      axios.post(\"api/uploadfile\", formData); \r\n    }; \r\n     \r\n    // File content to be displayed after \r\n    // file upload is complete \r\n    fileData = () => { \r\n     \r\n      if (this.state.selectedFile) { \r\n          \r\n        return ( \r\n          <div> \r\n            <h2>File Details:</h2> \r\n            <p>File Name: {this.state.selectedFile.name}</p> \r\n            <p>File Type: {this.state.selectedFile.type}</p> \r\n            <p> \r\n              Last Modified:{\" \"} \r\n              {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n            </p> \r\n          </div> \r\n        ); \r\n      } else { \r\n        return ( \r\n          <div> \r\n            <br /> \r\n            <h4>Choose before Pressing the Upload button</h4> \r\n          </div> \r\n        ); \r\n      } \r\n    }; \r\n     \r\n    render() { \r\n     \r\n      return ( \r\n        <div> \r\n            <h1> \r\n              FileUpload  POC\r\n            </h1> \r\n            <h3> \r\n              File Upload using React! \r\n            </h3> \r\n            <div> \r\n                <input type=\"file\" onChange={this.handleUpload} /> \r\n                {/* <button onClick={this.onFileUpload}> \r\n                  Upload! \r\n                </button>  */}\r\n                <CSVLink data={this.state.filteredArray} headers={this.state.headers}>\r\n  Download me\r\n</CSVLink>\r\n            </div> \r\n          {this.fileData()} \r\n        </div> \r\n      ); \r\n    } \r\n  } \r\n  \r\n  export default Test; \r\n","F:\\LeelaAllInOne\\Broadridge\\brwork\\jtpApp-20210202T081442Z-001\\jtpApp\\src\\reportWebVitals.js",[],{"ruleId":"25","severity":1,"message":"26","line":4,"column":8,"nodeType":"27","messageId":"28","endLine":4,"endColumn":11},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":84,"column":38,"nodeType":"35","messageId":"36","endLine":84,"endColumn":40},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]